//
//  InsighterKit.swift
//  insighter-app
//
//  Created by Jan Dammsh√§user on 15.08.16.
//  Copyright (c) 2016 insighter. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class InsighterKit : NSObject {

    //// Drawing Methods

    public class func drawSliderView(sliderColor sliderColor: UIColor = UIColor(red: 1.000, green: 0.651, blue: 0.263, alpha: 1.000), sliderFraction: CGFloat = 0.5) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let backgroundColor = UIColor(red: 0.878, green: 0.878, blue: 0.878, alpha: 1.000)

        //// Variable Declarations
        let angle: CGFloat = -45 - sliderFraction * (135 - 45)

        //// SliderGroup
        CGContextSaveGState(context)
        CGContextBeginTransparencyLayer(context, nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.moveToPoint(CGPointMake(295.46, 74.05))
        clipPath.addLineToPoint(CGPointMake(311.16, 58.36))
        clipPath.addCurveToPoint(CGPointMake(155.99, 1), controlPoint1: CGPointMake(275.83, 23.54), controlPoint2: CGPointMake(219.48, 1))
        clipPath.addCurveToPoint(CGPointMake(-0.04, 59.22), controlPoint1: CGPointMake(91.98, 1), controlPoint2: CGPointMake(35.23, 23.91))
        clipPath.addLineToPoint(CGPointMake(16.14, 75.41))
        clipPath.addCurveToPoint(CGPointMake(156.49, 24.15), controlPoint1: CGPointMake(47.14, 44.41), controlPoint2: CGPointMake(98.44, 24.15))
        clipPath.addCurveToPoint(CGPointMake(295.46, 74.05), controlPoint1: CGPointMake(213.68, 24.15), controlPoint2: CGPointMake(264.33, 43.82))
        clipPath.closePath()
        clipPath.usesEvenOddFillRule = true;

        clipPath.addClip()


        //// BackgroundRect Drawing
        let backgroundRectPath = UIBezierPath(rect: CGRectMake(-5.05, -4, 321.2, 84.4))
        backgroundColor.setFill()
        backgroundRectPath.fill()


        //// AngledRect Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 155.03, 214.97)
        CGContextRotateCTM(context, -angle * CGFloat(M_PI) / 180)

        let angledRectPath = UIBezierPath(rect: CGRectMake(-229.11, 0, 458.21, 246.12))
        sliderColor.setFill()
        angledRectPath.fill()

        CGContextRestoreGState(context)


        CGContextEndTransparencyLayer(context)
        CGContextRestoreGState(context)
    }

}
